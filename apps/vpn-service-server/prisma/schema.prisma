datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt           DateTime         @default(now())
  email               String?          @unique
  firstName           String?
  id                  String           @id @default(auto()) @map("_id") @db.ObjectId
  lastName            String?
  password            String
  roles               Json
  updatedAt           DateTime         @updatedAt
  username            String           @unique
  vpnConnectionsItems VpnConnections[]
}

model ServerLocations {
  city                String?
  country             String?
  createdAt           DateTime         @default(now())
  id                  String           @id @default(auto()) @map("_id") @db.ObjectId
  ipAddress           String?
  updatedAt           DateTime         @updatedAt
  vpnConnectionsItems VpnConnections[]
}

model SubscriptionPlans {
  createdAt  DateTime @default(now())
  duration   Int?
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  price      Float?
  updatedAt  DateTime @updatedAt
  usersItems Users[]
}

model VpnConnections {
  connectionTime    DateTime?
  createdAt         DateTime         @default(now())
  disconnectionTime DateTime?
  id                String           @id @default(auto()) @map("_id") @db.ObjectId
  serverLocation    ServerLocations? @relation(fields: [serverLocationId], references: [id])
  serverLocationId  String?          @db.ObjectId
  updatedAt         DateTime         @updatedAt
  user              User?            @relation(fields: [userId], references: [id])
  userId            String?          @db.ObjectId
}

model Users {
  createdAt          DateTime           @default(now())
  email              String?
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  password           String?
  subscriptionPlan   SubscriptionPlans? @relation(fields: [subscriptionPlanId], references: [id])
  subscriptionPlanId String?            @db.ObjectId
  updatedAt          DateTime           @updatedAt
  username           String?
}

model Admin {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  password  String?
  role      String?
  updatedAt DateTime @updatedAt
  username  String?
}

model Token {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  isValid   Boolean?
  token     String?
  updatedAt DateTime @updatedAt
}
